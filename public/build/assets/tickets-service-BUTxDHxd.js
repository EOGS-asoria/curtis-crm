async function c(t){try{return(await axios.get(`/api/tickets${t}`)).data.data}catch{return[]}}async function n(t){return(await axios.post("/api/get_tickets_by_warehouse/"+t)).data.result}async function _(t,s){return(await axios.post("/api/get_tickets_by_asc/"+s,{id:t})).data.result}async function u(t){return(await axios.post("/api/tickets",t)).data.result}async function o(t,s){return(await axios.get("/api/tickets/"+t+s)).data.result}async function p(t){return(await axios.get("/api/get_tickets_by_email/"+t)).data.result}async function y(t){return(await axios.put("/api/tickets/"+t.id,t)).data.result}async function l(t){return(await axios.get("/api/get_tickets_by_ticket_id/"+t)).data.result}async function d(t,s){return(await axios.put("/api/update_explanation/"+t,{explanation:s})).data.result}async function k(t,s,e,a,i){return(await axios.put("/api/update_tickets_status/"+t,{status:s,user_id:e,data:a,from:i})).data.result}async function g(t,s,e){const a=t.call_type=="Parts"?"TICKET PARTS CLOSED":t.call_type=="CF-Warranty Claim"?"TICKET WARRANTY CLOSED":"TICKET TECH CLOSED";return(await axios.put("/api/close_ticket/"+t.id,{reason:s,user:e,type:a})).data.result}export{o as a,y as b,g as c,p as d,_ as e,n as f,l as g,c as h,k as i,u as s,d as u};
